#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>

#define cN3 25
#define vN3 30
#define cN4 80
#define vN4 30

int A3[cN3][vN3]={{0, 0, 7, 3, 0, 0, 6, 0, 0, 0, 7, 0, 12, 0, 0, 0, 0, 20, 3, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 8},
	{0, 0, 17, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 17},
	{0, 6, 0, 0, 0, 2, 0, 11, 0, 3, 19, 12, 5, 0, 4, 0, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 0, 0, 19},
	{0, 0, 0, 0, 0, 0, 18, 9, 0, 0, 0, 0, 16, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1},
	{11, 0, 0, 5, 9, 7, 8, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 5, 18, 0, 0, 4, 0, 0, 18, 0},
	{0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 16, 20, 15, 0, 0, 0, 20, 0, 17, 0, 16},
	{0, 0, 0, 9, 0, 0, 0, 0, 13, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0, 5, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 15, 0, 0, 5, 0, 13, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 16, 0,0, 0, 0, 19, 9, 0, 0, 0},
	{0, 0, 12, 0, 0, 8, 19, 19, 20, 0, 18, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0,0, 0, 0, 0, 0, 0, 0, 0},
	{0, 1, 0, 0, 10, 11, 0, 0, 0, 0, 12, 16, 13, 0, 0, 0, 14, 0, 0, 0, 0,0, 0, 0, 0, 0, 7, 10, 0, 0},
	{8, 0, 10, 17, 0, 0, 0, 10, 0, 15, 0, 0, 5, 18, 0, 0, 0, 0, 12, 0, 1,0, 0, 0, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 2, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0,5, 0, 0, 15, 0, 0, 0},
	{0, 0, 16, 0, 16, 0, 0, 0, 12, 0, 2, 0, 18, 0, 0, 0, 0, 0, 0, 0, 17, 0,0, 9, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 8, 0, 18, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0,13, 0, 0, 0, 0, 0, 0},
	{0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 11, 0, 0, 5, 0, 0,14, 13, 0, 0, 0, 0, 0},
	{20, 0, 0, 0, 19, 2, 0, 0, 0, 0, 0, 0, 0, 0, 17, 1, 19, 0, 0, 0, 0, 0,0, 0, 0, 12, 0, 0, 0, 0},
	{0, 0, 0, 0, 17, 0, 0, 0, 13, 1, 0, 10, 0, 0, 2, 0, 20, 0, 0, 0, 5, 8,0, 6, 12, 0, 0, 0, 19, 0},
	{0, 0, 0, 0, 10, 15, 2, 0, 0, 0, 6, 0, 0, 9, 0, 0, 0, 0, 2, 0, 0, 0,18, 0, 0, 0, 18, 0, 0, 0},
	{0, 0, 16, 8, 0, 0, 16, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 9, 0, 0, 1, 0,0, 0, 0, 0, 0, 0, 0, 17},
	{0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0,0, 0, 0, 0, 17, 6, 0},
	{0, 0, 0, 1, 0, 0, 11, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 8,20, 0, 0, 18, 0, 0, 0, 0},
	{6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 16, 0, 0, 0, 0, 0, 0, 2, 0, 19,0, 0, 0, 6, 14, 0, 0, 0},
	{0, 0, 16, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,0, 0, 0, 0, 0, 15, 0},
	{16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 6, 1, 0, 0, 0, 0, 0, 10, 0,0, 0, 0, 0, 0, 11, 19},
	{0, 4, 0, 0, 8, 0, 17, 19, 0, 0, 0, 0, 3, 0, 0, 6, 0, 0, 15, 0, 0, 0,19, 0, 0, 0, 0, 0, 0, 0}};
int b3[cN3]={37, 79, 22, 18, 38, 24, 64, 39, 53, 69, 70, 57, 17, 75, 49, 76, 23,46, 48, 41, 43, 24, 59, 20, 64};
int c3[vN3]={5, 7, 14, 9, 11, 4, 10, 3, 3, 9, 11, 12, 8, 8, 8, 4, 13, 9, 8, 10,8, 11, 3, 10, 2, 4, 10, 9, 9, 7};


int A4[cN4][vN4] = ;
int b4[cN4] = {3, 6, 1, 7, 0, 0, 0, 9, 5, 1, 9, 8, 0, 6, 9, 5, 6, 3, 0, 3, 4, 8, 5, 0, 1, 2, 2, 8, 1, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2};
int c4[vN4] = {5, 5, 2, 1, 0, 3, 4, 5, 3, 0, 1, 4, 2, 1, 3, 5, 4, 6, 4, 7, 9, 6, 0, 2, 9, 1, 2, 9, 5, 3};

                                  
main(){
  FILE *I3P;
  int i, j;
  if((I3P=fopen("I3_primal","w"))==NULL)
    printf("Fail to open file!\n");
  else
    printf("Open file successfully!\n");
  fprintf(I3P,"minimize\n");
  for(i=0; i<vN3; i++)       
    if(i==vN3-1)
      fprintf(I3P,"%dx%d\n",c3[i],i);
    else
      fprintf(I3P,"%dx%d + ",c3[i],i);
  fprintf(I3P,"s.t.\n");
  for(i=0; i<cN3; i++)
    for(j=0; j<vN3; j++)
      if(j==vN3-1)
	fprintf(I3P,"%dx%d >= %d\n",A3[i][j],j,b3[i]);
      else
	fprintf(I3P,"%dx%d + ",A3[i][j],j,b3[i]);
  fprintf(I3P,"bounds\n");
  for(i=0; i<vN3; i++)
    fprintf(I3P,"x%d >= 0\n",i);
  fprintf(I3P,"end\n");
  fclose(I3P);
 
  FILE *I3D;
  if((I3D=fopen("I3_dual","w"))==NULL)
    printf("Fail to open file!\n");
  else
    printf("Open file successfully!\n");
  fprintf(I3D,"maximize\n");
  for(i=0; i<cN3; i++)       
    if(i==cN3-1)
      fprintf(I3D,"%dy%d\n",b3[i],i);
    else
      fprintf(I3D,"%dy%d + ",b3[i],i);
  fprintf(I3D,"s.t.\n");
  for(j=0; j<vN3; j++)
    for(i=0; i<cN3; i++)
      if(i==cN3-1)
	fprintf(I3D,"%dy%d <= %d\n",A3[i][j],i,c3[j]);
      else
	fprintf(I3D,"%dy%d + ",A3[i][j],i,c3[j]);
  fprintf(I3D,"bounds\n");
  for(i=0; i<cN3; i++)
    fprintf(I3D,"y%d >= 0\n",i);
  fprintf(I3D,"end\n");
  fclose(I3D);
  
  FILE *I4P;
  if((I4P=fopen("I4_primal","w"))==NULL)
    printf("Fail to open file!\n");
  else
    printf("Open file successfully!\n");
  fprintf(I4P,"minimize\n");
  for(i=0; i<vN4; i++)       
    if(i==vN4-1)
      fprintf(I4P,"%dx%d\n",c4[i],i);
    else
      fprintf(I4P,"%dx%d + ",c4[i],i);
  fprintf(I4P,"s.t.\n");
  for(i=0; i<cN4; i++)
    for(j=0; j<vN4; j++)
      if(j==vN4-1)
	fprintf(I4P,"%dx%d >= %d\n",A4[i][j],j,b4[i]);
      else
	fprintf(I4P,"%dx%d + ",A4[i][j],j,b4[i]);
  fprintf(I4P,"bounds\n");
  for(i=0; i<vN4; i++)
    fprintf(I4P,"x%d >= 0\n",i);
  fprintf(I4P,"end\n");
  fclose(I4P);
 
  FILE *I4D;
  if((I4D=fopen("I4_dual","w"))==NULL)
    printf("Fail to open file!\n");
  else
    printf("Open file successfully!\n");
  fprintf(I4D,"maximize\n");
  for(i=0; i<cN4; i++)       
    if(i==cN4-1)
      fprintf(I4D,"%dy%d\n",b4[i],i);
    else
      fprintf(I4D,"%dy%d + ",b4[i],i);
  fprintf(I4D,"s.t.\n");
  for(j=0; j<vN4; j++)
    for(i=0; i<cN4; i++)
      if(i==cN4-1)
	fprintf(I4D,"%dy%d <= %d\n",A4[i][j],i,c4[j]);
      else
	fprintf(I4D,"%dy%d + ",A4[i][j],i,c4[j]);
  fprintf(I4D,"bounds\n");
  for(i=0; i<cN4; i++)
    fprintf(I4D,"y%d >= 0\n",i);
  fprintf(I4D,"end\n");
  fclose(I4D);
}

